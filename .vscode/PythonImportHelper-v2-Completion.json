[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "render_template",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "url_for",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "time",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "strftime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "localtime",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "create_paste_api",
        "kind": 2,
        "importPath": "test.testing",
        "description": "test.testing",
        "peekOfCode": "def create_paste_api(content):\n    \"\"\"Create a new paste via the API.\"\"\"\n    url = f'{BASE_URL}/api/paste'\n    response = requests.post(url, json={'content': content})\n    if response.status_code == 201:\n        print(\"Paste created successfully:\", response.json())\n        return response.json()['id']\n    else:\n        print(\"Failed to create paste:\", response.json())\ndef get_paste_api(paste_id):",
        "detail": "test.testing",
        "documentation": {}
    },
    {
        "label": "get_paste_api",
        "kind": 2,
        "importPath": "test.testing",
        "description": "test.testing",
        "peekOfCode": "def get_paste_api(paste_id):\n    \"\"\"Retrieve an existing paste via the API.\"\"\"\n    url = f'{BASE_URL}/api/paste/{paste_id}'\n    response = requests.get(url)\n    if response.status_code == 200:\n        print(\"Paste retrieved successfully:\", response.json())\n    else:\n        print(\"Failed to retrieve paste:\", response.json())\nif __name__ == '__main__':\n    print(\"Testing API...\")",
        "detail": "test.testing",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "kind": 5,
        "importPath": "test.testing",
        "description": "test.testing",
        "peekOfCode": "BASE_URL = 'http://127.0.0.1:5000'\ndef create_paste_api(content):\n    \"\"\"Create a new paste via the API.\"\"\"\n    url = f'{BASE_URL}/api/paste'\n    response = requests.post(url, json={'content': content})\n    if response.status_code == 201:\n        print(\"Paste created successfully:\", response.json())\n        return response.json()['id']\n    else:\n        print(\"Failed to create paste:\", response.json())",
        "detail": "test.testing",
        "documentation": {}
    },
    {
        "label": "generate_unique_id",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def generate_unique_id():\n    return ''.join(random.choices(string.ascii_uppercase, k=5))\n# Web Interface Routes\n@app.route('/', methods=['GET'])\ndef homepage():\n    return render_template('index.html')\n@app.route('/paste', methods=['POST'])\ndef create_paste():\n    content = request.form.get('content')\n    unique_id = generate_unique_id()",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "homepage",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def homepage():\n    return render_template('index.html')\n@app.route('/paste', methods=['POST'])\ndef create_paste():\n    content = request.form.get('content')\n    unique_id = generate_unique_id()\n    while unique_id in pastes:\n        unique_id = generate_unique_id()\n    timestamp = time()\n    pastes[unique_id] = {'content': content, 'epoch_created_at': timestamp, 'created_at': strftime('%Y-%m-%d %H:%M:%S', localtime(timestamp))}",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "create_paste",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def create_paste():\n    content = request.form.get('content')\n    unique_id = generate_unique_id()\n    while unique_id in pastes:\n        unique_id = generate_unique_id()\n    timestamp = time()\n    pastes[unique_id] = {'content': content, 'epoch_created_at': timestamp, 'created_at': strftime('%Y-%m-%d %H:%M:%S', localtime(timestamp))}\n    return redirect(url_for('get_paste', id=unique_id))\n@app.route('/<id>', methods=['GET'])\ndef get_paste(id):",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_paste",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def get_paste(id):\n    paste = pastes.get(id)\n    if paste:\n        return render_template('paste.html', content=paste['content'])\n    else:\n        return 'Paste not found', 404\n# API Routes\n@app.route('/api/paste', methods=['POST'])\ndef api_create_paste():\n    content = request.json.get('content')",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "api_create_paste",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def api_create_paste():\n    content = request.json.get('content')\n    if not content:\n        return jsonify({'error': 'Content is required'}), 400\n    unique_id = generate_unique_id()\n    while unique_id in pastes:\n        unique_id = generate_unique_id()\n    timestamp = time()\n    pastes[unique_id] = {'content': content, 'epoch_created_at': timestamp, 'created_at': strftime('%Y-%m-%d %H:%M:%S', localtime(timestamp))}\n    return jsonify({'message': 'Paste created successfully', 'id': unique_id}), 201",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "api_get_paste",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def api_get_paste(id):\n    paste = pastes.get(id)\n    if paste:\n        return jsonify({'content': paste['content'], 'epoch_created_at': paste['epoch_created_at'], 'created_at': paste['created_at']})\n    else:\n        return jsonify({'error': 'Paste not found'}), 404\nif __name__ == '__main__':\n    app.run(debug=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\npastes = {}\ndef generate_unique_id():\n    return ''.join(random.choices(string.ascii_uppercase, k=5))\n# Web Interface Routes\n@app.route('/', methods=['GET'])\ndef homepage():\n    return render_template('index.html')\n@app.route('/paste', methods=['POST'])\ndef create_paste():",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "pastes",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "pastes = {}\ndef generate_unique_id():\n    return ''.join(random.choices(string.ascii_uppercase, k=5))\n# Web Interface Routes\n@app.route('/', methods=['GET'])\ndef homepage():\n    return render_template('index.html')\n@app.route('/paste', methods=['POST'])\ndef create_paste():\n    content = request.form.get('content')",
        "detail": "app",
        "documentation": {}
    }
]